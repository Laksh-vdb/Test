{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { Box, useColorMode } from 'native-base';\nimport { NativeBaseProvider } from 'native-base';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction HomeScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Home!\"\n    })\n  });\n}\nfunction SettingsScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Settings!\"\n    })\n  });\n}\nvar Main = function Main() {\n  var _useColorMode = useColorMode(),\n    colorMode = _useColorMode.colorMode,\n    toggleColorMode = _useColorMode.toggleColorMode;\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Box, {\n      safeAreaTop: true,\n      flex: 1,\n      bg: colorMode == 'dark' ? 'black' : 'white',\n      children: _jsx(StatusBar, {\n        barStyle: colorMode == 'dark' ? 'light-content' : 'dark-content',\n        translucent: false\n      })\n    })\n  });\n};\nvar Bottom_Tab = createBottomTabNavigator();\nfunction MyTabs() {\n  return _jsxs(Bottom_Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-home' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list' : 'ios-list-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Bottom_Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarBadge: 3\n      }\n    }), _jsx(Bottom_Tab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        tabBarBadge: 3\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(Main, {}), _jsx(MyTabs, {})]\n  });\n}","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","NavigationContainer","createBottomTabNavigator","createMaterialTopTabNavigator","Ionicons","Box","useColorMode","NativeBaseProvider","jsx","_jsx","jsxs","_jsxs","HomeScreen","style","flex","justifyContent","alignItems","children","SettingsScreen","Main","_useColorMode","colorMode","toggleColorMode","safeAreaTop","bg","barStyle","translucent","Bottom_Tab","MyTabs","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","tabBarBadge","App"],"sources":["/Users/lakshkataria/Desktop/react-native/test1/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { Box, useColorMode } from 'native-base';\nimport { NativeBaseProvider } from 'native-base';\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n  \n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\nconst Main = () => {\n\tconst { colorMode, toggleColorMode } = useColorMode();\n\treturn (\n    <NativeBaseProvider>\n\t\t<Box safeAreaTop flex={1} bg={colorMode == 'dark' ? 'black' : 'white'}>\n\t\t\t<StatusBar\n\t\t\t\tbarStyle={colorMode == 'dark' ? 'light-content' : 'dark-content'}\n\t\t\t\ttranslucent={false}\n\t\t\t/>\n\t\t\t\n\t\t</Box>\n    </NativeBaseProvider>\n\t);\n};\n\n\nconst Bottom_Tab = createBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n\n    \n\n    <Bottom_Tab.Navigator\n    screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused\n                ? 'ios-home'\n                : 'ios-information-circle-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list' : 'ios-list-outline';\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: 'tomato',\n          tabBarInactiveTintColor: 'gray',\n        })}\n    >\n      <Bottom_Tab.Screen name=\"Home\" component={HomeScreen} options={{ tabBarBadge: 3 }} />\n      <Bottom_Tab.Screen name=\"Settings\" component={SettingsScreen} options={{ tabBarBadge: 3 }} />\n    </Bottom_Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n\n\n   \n    <NavigationContainer>\n      <Main/>\n      <MyTabs />\n    </NavigationContainer>\n  \n    \n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}